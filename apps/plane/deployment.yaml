apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:4-management
          ports:
            - name: amqp
              containerPort: 5672
            - name: http-mgmt
              containerPort: 15672
            - name: http-metrics
              containerPort: 15692
          env:
            - name: RABBITMQ_DEFAULT_PLUGINS_CONFIG
              value: "[rabbitmq_prometheus]."

            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: rabbitmq-creds
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  key: password
                  name: rabbitmq-creds
          volumeMounts:
            - name: rabbitmq-storage
              mountPath: /var/lib/rabbitmq
      # Define the temporary, non-persistent volume
      volumes:
        - name: rabbitmq-storage
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plane-admin-wl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: plane-admin
  template:
    metadata:
      labels:
        app.name: plane-admin
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: plane-admin
          imagePullPolicy: Always
          image: artifacts.plane.so/makeplane/plane-admin:stable
          stdin: true
          tty: true
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "1000Mi"
              cpu: "500m"
      serviceAccount: plane-srv-account
      serviceAccountName: plane-srv-account
---
# Source: plane-ce/templates/workloads/api.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plane-api-wl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: plane-api
  template:
    metadata:
      labels:
        app.name: plane-api
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: plane-api
          imagePullPolicy: Always
          image: artifacts.plane.so/makeplane/plane-backend:stable
          stdin: true
          tty: true
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "1000Mi"
              cpu: "500m"
          command:
            - ./bin/docker-entrypoint-api.sh
          envFrom:
            - configMapRef:
                name: plane-app-vars
                optional: false
            - secretRef:
                name: plane-app-secrets
                optional: false
            - secretRef:
                name: plane-doc-store-secrets
                optional: false
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1

      serviceAccount: plane-srv-account
      serviceAccountName: plane-srv-account
---
# Source: plane-ce/templates/workloads/beat-worker.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plane-beat-worker-wl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: plane-beat-worker
  template:
    metadata:
      labels:
        app.name: plane-beat-worker
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: plane-beat-worker
          imagePullPolicy: Always
          image: artifacts.plane.so/makeplane/plane-backend:stable
          stdin: true
          tty: true
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "1000Mi"
              cpu: "500m"
          command:
            - ./bin/docker-entrypoint-beat.sh
          envFrom:
            - configMapRef:
                name: plane-app-vars
                optional: false
            - secretRef:
                name: plane-app-secrets
                optional: false
            - secretRef:
                name: plane-doc-store-secrets
                optional: false
      serviceAccount: plane-srv-account
      serviceAccountName: plane-srv-account
---
# Source: plane-ce/templates/workloads/live.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plane-live-wl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: plane-live
  template:
    metadata:
      labels:
        app.name: plane-live
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: plane-live
          imagePullPolicy: Always
          image: artifacts.plane.so/makeplane/plane-live:stable
          stdin: true
          tty: true
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "1000Mi"
              cpu: "500m"
          envFrom:
            - configMapRef:
                name: plane-live-vars
                optional: false
            - secretRef:
                name: plane-live-secrets
                optional: false
      serviceAccount: plane-srv-account
      serviceAccountName: plane-srv-account
---
# Source: plane-ce/templates/workloads/space.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plane-space-wl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: plane-space
  template:
    metadata:
      labels:
        app.name: plane-space
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: plane-space
          imagePullPolicy: Always
          image: artifacts.plane.so/makeplane/plane-space:stable
          stdin: true
          tty: true
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "1000Mi"
              cpu: "500m"
      serviceAccount: plane-srv-account
      serviceAccountName: plane-srv-account
---
# Source: plane-ce/templates/workloads/web.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plane-web-wl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: plane-web
  template:
    metadata:
      labels:
        app.name: plane-web
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: plane-web
          imagePullPolicy: Always
          image: artifacts.plane.so/makeplane/plane-frontend:stable
          stdin: true
          tty: true
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "1000Mi"
              cpu: "500m"
      serviceAccount: plane-srv-account
      serviceAccountName: plane-srv-account
---
# Source: plane-ce/templates/workloads/worker.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plane-worker-wl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: plane-worker
  template:
    metadata:
      labels:
        app.name: plane-worker
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: plane-worker
          imagePullPolicy: Always
          image: artifacts.plane.so/makeplane/plane-backend:stable
          stdin: true
          tty: true
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "1000Mi"
              cpu: "500m"
          command:
            - ./bin/docker-entrypoint-worker.sh
          envFrom:
            - configMapRef:
                name: plane-app-vars
                optional: false
            - secretRef:
                name: plane-app-secrets
                optional: false
            - secretRef:
                name: plane-doc-store-secrets
                optional: false
      serviceAccount: plane-srv-account
      serviceAccountName: plane-srv-account
