---
# Source: external-secrets/templates/cert-controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-cert-controller
  namespace: external-secrets-operator-system
  labels:
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/metrics: "cert-controller"
---
# Source: external-secrets/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets
  namespace: external-secrets-operator-system
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
---
# Source: external-secrets/templates/webhook-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-webhook
  namespace: external-secrets-operator-system
  labels:
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/metrics: "webhook"
---
# Source: external-secrets/templates/webhook-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: external-secrets-webhook
  namespace: external-secrets-operator-system
  labels:
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/metrics: "webhook"
    external-secrets.io/component: webhook
---
# Source: external-secrets/templates/cert-controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-cert-controller
  labels:
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/metrics: "cert-controller"
rules:
  - apiGroups:
      - "apiextensions.k8s.io"
    resources:
      - "customresourcedefinitions"
    verbs:
      - "get"
      - "list"
      - "watch"
      - "update"
      - "patch"
  - apiGroups:
      - "admissionregistration.k8s.io"
    resources:
      - "validatingwebhookconfigurations"
    verbs:
      - "list"
      - "watch"
      - "get"
  - apiGroups:
      - "admissionregistration.k8s.io"
    resources:
      - "validatingwebhookconfigurations"
    resourceNames:
      - "secretstore-validate"
      - "externalsecret-validate"
    verbs:
      - "update"
      - "patch"
  - apiGroups:
      - ""
    resources:
      - "endpoints"
    verbs:
      - "list"
      - "get"
      - "watch"
  - apiGroups:
      - ""
    resources:
      - "events"
    verbs:
      - "create"
      - "patch"
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs:
      - "get"
      - "list"
      - "watch"
      - "update"
      - "patch"
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - "leases"
    verbs:
      - "get"
      - "create"
      - "update"
      - "patch"
---
# Source: external-secrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-controller
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
rules:
  - apiGroups:
      - "external-secrets.io"
    resources:
      - "secretstores"
      - "clustersecretstores"
      - "externalsecrets"
      - "clusterexternalsecrets"
      - "pushsecrets"
      - "clusterpushsecrets"
    verbs:
      - "get"
      - "list"
      - "watch"
  - apiGroups:
      - "external-secrets.io"
    resources:
      - "externalsecrets"
      - "externalsecrets/status"
      - "externalsecrets/finalizers"
      - "secretstores"
      - "secretstores/status"
      - "secretstores/finalizers"
      - "clustersecretstores"
      - "clustersecretstores/status"
      - "clustersecretstores/finalizers"
      - "clusterexternalsecrets"
      - "clusterexternalsecrets/status"
      - "clusterexternalsecrets/finalizers"
      - "pushsecrets"
      - "pushsecrets/status"
      - "pushsecrets/finalizers"
      - "clusterpushsecrets"
      - "clusterpushsecrets/status"
      - "clusterpushsecrets/finalizers"
    verbs:
      - "get"
      - "update"
      - "patch"
  - apiGroups:
      - "generators.external-secrets.io"
    resources:
      - "generatorstates"
    verbs:
      - "get"
      - "list"
      - "watch"
      - "create"
      - "update"
      - "patch"
      - "delete"
      - "deletecollection"
  - apiGroups:
      - "generators.external-secrets.io"
    resources:
      - "acraccesstokens"
      - "clustergenerators"
      - "ecrauthorizationtokens"
      - "fakes"
      - "gcraccesstokens"
      - "githubaccesstokens"
      - "quayaccesstokens"
      - "passwords"
      - "stssessiontokens"
      - "uuids"
      - "vaultdynamicsecrets"
      - "webhooks"
      - "grafanas"
      - "mfas"
    verbs:
      - "get"
      - "list"
      - "watch"
  - apiGroups:
      - ""
    resources:
      - "serviceaccounts"
      - "namespaces"
    verbs:
      - "get"
      - "list"
      - "watch"
  - apiGroups:
      - ""
    resources:
      - "configmaps"
    verbs:
      - "get"
      - "list"
      - "watch"
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs:
      - "get"
      - "list"
      - "watch"
      - "create"
      - "update"
      - "delete"
      - "patch"
  - apiGroups:
      - ""
    resources:
      - "serviceaccounts/token"
    verbs:
      - "create"
  - apiGroups:
      - ""
    resources:
      - "events"
    verbs:
      - "create"
      - "patch"
  - apiGroups:
      - "external-secrets.io"
    resources:
      - "externalsecrets"
    verbs:
      - "create"
      - "update"
      - "delete"
  - apiGroups:
      - "external-secrets.io"
    resources:
      - "pushsecrets"
    verbs:
      - "create"
      - "update"
      - "delete"
---
# Source: external-secrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-view
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups:
      - "external-secrets.io"
    resources:
      - "externalsecrets"
      - "secretstores"
      - "clustersecretstores"
      - "pushsecrets"
      - "clusterpushsecrets"
    verbs:
      - "get"
      - "watch"
      - "list"
  - apiGroups:
      - "generators.external-secrets.io"
    resources:
      - "acraccesstokens"
      - "clustergenerators"
      - "ecrauthorizationtokens"
      - "fakes"
      - "gcraccesstokens"
      - "githubaccesstokens"
      - "quayaccesstokens"
      - "passwords"
      - "vaultdynamicsecrets"
      - "webhooks"
      - "grafanas"
      - "generatorstates"
      - "mfas"
    verbs:
      - "get"
      - "watch"
      - "list"
---
# Source: external-secrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-edit
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups:
      - "external-secrets.io"
    resources:
      - "externalsecrets"
      - "secretstores"
      - "clustersecretstores"
      - "pushsecrets"
      - "clusterpushsecrets"
    verbs:
      - "create"
      - "delete"
      - "deletecollection"
      - "patch"
      - "update"
  - apiGroups:
      - "generators.external-secrets.io"
    resources:
      - "acraccesstokens"
      - "clustergenerators"
      - "ecrauthorizationtokens"
      - "fakes"
      - "gcraccesstokens"
      - "githubaccesstokens"
      - "quayaccesstokens"
      - "passwords"
      - "vaultdynamicsecrets"
      - "webhooks"
      - "grafanas"
      - "generatorstates"
      - "mfas"
    verbs:
      - "create"
      - "delete"
      - "deletecollection"
      - "patch"
      - "update"
---
# Source: external-secrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-servicebindings
  labels:
    servicebinding.io/controller: "true"
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
rules:
  - apiGroups:
      - "external-secrets.io"
    resources:
      - "externalsecrets"
      - "pushsecrets"
    verbs:
      - "get"
      - "list"
      - "watch"
---
# Source: external-secrets/templates/cert-controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-secrets-cert-controller
  labels:
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/metrics: "cert-controller"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-secrets-cert-controller
subjects:
  - name: external-secrets-cert-controller
    namespace: external-secrets-operator-system
    kind: ServiceAccount
---
# Source: external-secrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-secrets-controller
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-secrets-controller
subjects:
  - name: external-secrets
    namespace: external-secrets-operator-system
    kind: ServiceAccount
---
# Source: external-secrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: external-secrets-leaderelection
  namespace: external-secrets-operator-system
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
rules:
  - apiGroups:
      - ""
    resources:
      - "configmaps"
    resourceNames:
      - "external-secrets-controller"
    verbs:
      - "get"
      - "update"
      - "patch"
  - apiGroups:
      - ""
    resources:
      - "configmaps"
    verbs:
      - "create"
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - "leases"
    verbs:
      - "get"
      - "create"
      - "update"
      - "patch"
---
# Source: external-secrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: external-secrets-leaderelection
  namespace: external-secrets-operator-system
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-secrets-leaderelection
subjects:
  - kind: ServiceAccount
    name: external-secrets
    namespace: external-secrets-operator-system
---
# Source: external-secrets/templates/cert-controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: external-secrets-cert-controller-metrics
  namespace: external-secrets-operator-system
  labels:
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/metrics: "cert-controller"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      targetPort: metrics
      name: metrics
  selector:
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/instance: external-secrets
---
# Source: external-secrets/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: external-secrets-metrics
  namespace: external-secrets-operator-system
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      targetPort: metrics
      name: metrics
  selector:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
---
# Source: external-secrets/templates/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: external-secrets-webhook
  namespace: external-secrets-operator-system
  labels:
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/metrics: "webhook"
    external-secrets.io/component: webhook
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 10250
      protocol: TCP
      name: webhook
    - port: 8080
      protocol: TCP
      targetPort: metrics
      name: metrics
  selector:
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
---
# Source: external-secrets/templates/cert-controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-secrets-cert-controller
  namespace: external-secrets-operator-system
  labels:
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/metrics: "cert-controller"
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: external-secrets-cert-controller
      app.kubernetes.io/instance: external-secrets
  template:
    metadata:
      labels:
        helm.sh/chart: external-secrets-0.18.0
        app.kubernetes.io/name: external-secrets-cert-controller
        app.kubernetes.io/instance: external-secrets
        app.kubernetes.io/version: "v0.18.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/metrics: "cert-controller"
    spec:
      serviceAccountName: external-secrets-cert-controller
      automountServiceAccountToken: true
      hostNetwork: false
      containers:
        - name: cert-controller
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          image: oci.external-secrets.io/external-secrets/external-secrets:v0.18.0
          imagePullPolicy: IfNotPresent
          args:
            - certcontroller
            - --crd-requeue-interval=5m
            - --service-name=external-secrets-webhook
            - --service-namespace=external-secrets-operator-system
            - --secret-name=external-secrets-webhook
            - --secret-namespace=external-secrets-operator-system
            - --metrics-addr=:8080
            - --healthz-addr=:8081
            - --loglevel=info
            - --zap-time-encoding=epoch
          ports:
            - containerPort: 8080
              protocol: TCP
              name: metrics
          readinessProbe:
            httpGet:
              port: 8081
              path: /readyz
            initialDelaySeconds: 20
            periodSeconds: 5
---
# Source: external-secrets/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-secrets
  namespace: external-secrets-operator-system
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: external-secrets
      app.kubernetes.io/instance: external-secrets
  template:
    metadata:
      labels:
        helm.sh/chart: external-secrets-0.18.0
        app.kubernetes.io/name: external-secrets
        app.kubernetes.io/instance: external-secrets
        app.kubernetes.io/version: "v0.18.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: external-secrets
      automountServiceAccountToken: true
      hostNetwork: false
      containers:
        - name: external-secrets
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          image: oci.external-secrets.io/external-secrets/external-secrets:v0.18.0
          imagePullPolicy: IfNotPresent
          args:
            - --concurrent=1
            - --metrics-addr=:8080
            - --loglevel=info
            - --zap-time-encoding=epoch
          ports:
            - containerPort: 8080
              protocol: TCP
              name: metrics
      dnsPolicy: ClusterFirst
---
# Source: external-secrets/templates/webhook-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-secrets-webhook
  namespace: external-secrets-operator-system
  labels:
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/metrics: "webhook"
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: external-secrets-webhook
      app.kubernetes.io/instance: external-secrets
  template:
    metadata:
      labels:
        helm.sh/chart: external-secrets-0.18.0
        app.kubernetes.io/name: external-secrets-webhook
        app.kubernetes.io/instance: external-secrets
        app.kubernetes.io/version: "v0.18.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/metrics: "webhook"
    spec:
      hostNetwork: false
      serviceAccountName: external-secrets-webhook
      automountServiceAccountToken: true
      containers:
        - name: webhook
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          image: oci.external-secrets.io/external-secrets/external-secrets:v0.18.0
          imagePullPolicy: IfNotPresent
          args:
            - webhook
            - --port=10250
            - --dns-name=external-secrets-webhook.external-secrets-operator-system.svc
            - --cert-dir=/tmp/certs
            - --check-interval=5m
            - --metrics-addr=:8080
            - --healthz-addr=:8081
            - --loglevel=info
            - --zap-time-encoding=epoch
          ports:
            - containerPort: 8080
              protocol: TCP
              name: metrics
            - containerPort: 10250
              protocol: TCP
              name: webhook
          readinessProbe:
            httpGet:
              port: 8081
              path: /readyz
            initialDelaySeconds: 20
            periodSeconds: 5
          volumeMounts:
            - name: certs
              mountPath: /tmp/certs
              readOnly: true
      volumes:
        - name: certs
          secret:
            secretName: external-secrets-webhook
---
# Source: external-secrets/templates/servicemonitor.yaml
apiVersion: "monitoring.coreos.com/v1"
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
  name: external-secrets-metrics
  namespace: "external-secrets-operator-system"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: external-secrets
      app.kubernetes.io/instance: external-secrets
  namespaceSelector:
    matchNames:
      - external-secrets-operator-system
  endpoints:
    - port: metrics
      interval: 30s
      scrapeTimeout: 25s
      honorLabels: false
---
# Source: external-secrets/templates/servicemonitor.yaml
apiVersion: "monitoring.coreos.com/v1"
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/metrics: "webhook"
  name: external-secrets-webhook-metrics
  namespace: "external-secrets-operator-system"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: external-secrets-webhook
      app.kubernetes.io/instance: external-secrets
      app.kubernetes.io/metrics: "webhook"
  namespaceSelector:
    matchNames:
      - external-secrets-operator-system
  endpoints:
    - port: metrics
      interval: 30s
      scrapeTimeout: 25s
      honorLabels: false
---
# Source: external-secrets/templates/servicemonitor.yaml
apiVersion: "monitoring.coreos.com/v1"
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/metrics: "cert-controller"
  name: external-secrets-cert-controller-metrics
  namespace: "external-secrets-operator-system"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: external-secrets-cert-controller
      app.kubernetes.io/instance: external-secrets
      app.kubernetes.io/metrics: "cert-controller"
  namespaceSelector:
    matchNames:
      - external-secrets-operator-system
  endpoints:
    - port: metrics
      interval: 30s
      scrapeTimeout: 25s
      honorLabels: false
---
# Source: external-secrets/templates/validatingwebhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: secretstore-validate
  labels:
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/metrics: "webhook"
    external-secrets.io/component: webhook
webhooks:
  - name: "validate.secretstore.external-secrets.io"
    rules:
      - apiGroups: ["external-secrets.io"]
        apiVersions: ["v1"]
        operations: ["CREATE", "UPDATE", "DELETE"]
        resources: ["secretstores"]
        scope: "Namespaced"
    clientConfig:
      service:
        namespace: external-secrets-operator-system
        name: external-secrets-webhook
        path: /validate-external-secrets-io-v1-secretstore
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
  - name: "validate.clustersecretstore.external-secrets.io"
    rules:
      - apiGroups: ["external-secrets.io"]
        apiVersions: ["v1"]
        operations: ["CREATE", "UPDATE", "DELETE"]
        resources: ["clustersecretstores"]
        scope: "Cluster"
    clientConfig:
      service:
        namespace: external-secrets-operator-system
        name: external-secrets-webhook
        path: /validate-external-secrets-io-v1-clustersecretstore
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
---
# Source: external-secrets/templates/validatingwebhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: externalsecret-validate
  labels:
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/metrics: "webhook"
    external-secrets.io/component: webhook
webhooks:
  - name: "validate.externalsecret.external-secrets.io"
    rules:
      - apiGroups: ["external-secrets.io"]
        apiVersions: ["v1"]
        operations: ["CREATE", "UPDATE", "DELETE"]
        resources: ["externalsecrets"]
        scope: "Namespaced"
    clientConfig:
      service:
        namespace: external-secrets-operator-system
        name: external-secrets-webhook
        path: /validate-external-secrets-io-v1-externalsecret
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
    failurePolicy: Fail
