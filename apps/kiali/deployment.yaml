# Source: kiali-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kiali
  labels:
    app: kiali
    app.kubernetes.io/name: kiali
    app.kubernetes.io/instance: kiali
    version: "v1.87.0"
    app.kubernetes.io/version: "v1.87.0"
    app.kubernetes.io/part-of: "kiali"
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: kiali
      app.kubernetes.io/instance: kiali
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      name: kiali
      labels:
        app: kiali
        app.kubernetes.io/name: kiali
        app.kubernetes.io/instance: kiali
        version: "v1.87.0"
        app.kubernetes.io/version: "v1.87.0"
        app.kubernetes.io/part-of: "kiali"
        sidecar.istio.io/inject: "true"
      annotations:
        checksum/config: 12d7579aa3de1df2ebb8812a826d78d94a8fd2e4a20b51a64dab57151bc28902
        # prometheus.io/scrape: "true"
        # prometheus.io/port: "9090"
        kiali.io/dashboards: go,kiali
        proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
    spec:
      serviceAccountName: kiali
      containers:
        - image: "quay.io/kiali/kiali:v2.16.0"
          imagePullPolicy: IfNotPresent
          name: kiali
          command:
            - "/opt/kiali/kiali"
            - "-config"
            - "/kiali-configuration/config.yaml"
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
          ports:
            - name: api-port
              containerPort: 20001
            - name: http-metrics
              containerPort: 9090
          readinessProbe:
            httpGet:
              path: /kiali/healthz
              port: api-port
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /kiali/healthz
              port: api-port
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
          env:
            - name: ACTIVE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FORMAT
              value: "text"
            - name: LOG_TIME_FIELD_FORMAT
              value: "2006-01-02T15:04:05Z07:00"
            - name: LOG_SAMPLER_RATE
              value: "1"
          volumeMounts:
            # - name: kiali-configuration
              # mountPath: "/kiali-configuration"
            - mountPath: "/kiali-configuration/config.yaml"
              name: secret-config
              readOnly: true
              subPath: config.yaml
            - name: kiali-cert
              mountPath: "/kiali-cert"
            - name: kiali-secret
              mountPath: "/kiali-secret"
            - name: kiali-cabundle
              mountPath: "/kiali-cabundle"
          resources:
            limits:
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 64Mi
      volumes:
        # - name: kiali-configuration
        #   configMap:
        #     name: kiali
        - name: kiali-cert
          secret:
            secretName: istio.kiali-service-account
            optional: true
        - name: kiali-secret
          secret:
            secretName: kiali
            optional: true
        - name: kiali-cabundle
          configMap:
            name: kiali-cabundle
            optional: true
        - name: secret-config
          secret:
            secretName: kiali-config
